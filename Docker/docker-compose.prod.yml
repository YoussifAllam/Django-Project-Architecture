version: '3.8'

networks:
  backend:
    driver: bridge

volumes:
  Key77_django_db_data: {}
  Key77_media_data: {}
  Key77_postgres_data: {}
  Key77_static_vol: {}

services:

  Key77_app_postgres_db:
    image: postgres:13
    env_file:
      - ../ENV/.env.prod
    environment:
      DJANGO_ENV: test
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend # Attach to backend network

  django:
    build:
      context: ..
      dockerfile: Docker/Dockerfile
    container_name: Key77_app
    command: >
      uvicorn config.asgi:application --host 0.0.0.0 --port 8000 --reload --reload-include '*.py' --reload-include '*.html'
    restart: always
    volumes:
      - ..:/code
      - media_data:/code/Docker/volumes/media # Ensure media directory persists in the directory
      - django_db_data:/code/Docker/volumes/db_volume
      - static_vol:/code/staticfiles
    env_file:
      - ../ENV/.env.prod
    environment:
      - DJANGO_ENV=prod
      - DATABASE_HOST=Key77_app_postgres_db
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - Key77_app_postgres_db
      - elasticsearch
      - celery
      - celery-beat
    networks:
      - backend

  nginx:
    build: ../nginx
    volumes:
      - static_vol:/code/staticfiles
      - media_data:/code/media
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/lib/letsencrypt:/var/lib/letsencrypt:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - django
    networks:
      - backend

  redis:
    container_name: redis
    image: redis:latest
    networks:
      - backend

  celery:
    build:
      context: ..
      dockerfile: Docker/Dockerfile
    container_name: Key77_celery
    command: celery -A config.settings.celery worker -l info
    volumes:
      - ..:/code
      - ./code/db:/code/Docker/volumes/celery_db # Ensure SQLite database file persists in the directory
    env_file:
      - ../ENV/.env.prod
    environment:
      - DJANGO_SETTINGS_MODULE=config.django # Specify the settings module
      - DJANGO_ENV=prod
    depends_on:
      - redis
    networks:
      - backend

  celery-beat:
    build:
      context: ..
      dockerfile: Docker/Dockerfile
    container_name: Key77_celery_beat
    command: celery -A config.settings.celery beat -l info
    volumes:
      - ..:/code
      - ./code/db:/code/Docker/volumes/celery_db # Ensure SQLite database file persists in the directory
    env_file:
      - ../ENV/.env.prod
    environment:
      - DJANGO_SETTINGS_MODULE=config.django # Specify the settings module
      - DJANGO_ENV=prod
    depends_on:
      - redis
    networks:
      - backend

  nuxt:
    build:
      context: ../Front
      dockerfile: Dockerfile
    container_name: Key77_nuxt
    volumes:
      - ../front:/app
      - /app/node_modules
      - /app/.nuxt
      - /app/.output
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    networks:
      - backend
