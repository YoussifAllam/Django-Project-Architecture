"""
Django settings for styleguide_example project.

Generated by 'django-admin startproject' using Django 3.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
from pathlib import Path
from datetime import timedelta
from config.env import env, BASE_DIR

# Application definition
DEFAULT_APPS = [
    "django.contrib.contenttypes",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sites",
]

THIRD_PARTY_APPS = [
    "daphne",
    "drf_api_logger",
    "unfold",
    "unfold.contrib.simple_history",
    "unfold.contrib.filters",
    "rest_framework",
    "rest_framework.authtoken",
    "corsheaders",
    "django_ckeditor_5",
    "modeltranslation",
    "django_filters",
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
]

LOCAL_APPS = [
    "apps.Users",
]


INSTALLED_APPS = THIRD_PARTY_APPS + DEFAULT_APPS + LOCAL_APPS


BASIC_MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django.middleware.locale.LocaleMiddleware",
]

MIDDLEWARE = (
    [
        "whitenoise.middleware.WhiteNoiseMiddleware",
    ]
    + BASIC_MIDDLEWARE  # noqa
    + [  # noqa
        "drf_api_logger.middleware.api_logger_middleware.APILoggerMiddleware",
        "allauth.account.middleware.AccountMiddleware",
    ]
)

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")
STATIC_URL = "/static/"
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

# Media
MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

AUTH_USER_MODEL = "Users.User"

# SGI
ASGI_APPLICATION = "config.asgi.application"
os.environ["DJANGO_ALLOW_ASYNC_UNSAFE"] = "true"
# WSGI_APPLICATION = "config.wsgi.application"


from config.settings.celery import *  # noqa
from config.settings.cors import *  # noqa
from config.settings.sessions import *  # noqa
from config.settings.email_sending import *  # noqa
from config.settings.logger import *  # noqa: F403 F401 E402
from config.settings.CKEDITOR5 import *  # noqa
from config.settings.Unfold import *  # noqa
from config.settings.admin import *  # noqa
from config.settings.DRF import *  # noqa
from config.settings.aws import *  # noqa
from config.settings.google import *  # google settings # noqa
from config.settings.SPECTACULAR import *  # noqa
from config.settings.Cache import *  # noqa
from config.settings.channels import *  # noqa
from config.settings.DB_config import *  # noqa
from config.settings.JWT import *  # noqa
